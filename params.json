{"name":"Compound","tagline":"Write widgets/components with ease.","body":"# Compound\r\n\r\n> Write widgets with ease.\r\n\r\n\r\n## About\r\n\r\nCompound is a jQuery plugin that allows you to write **compounds** (widgets, components, or whatever you call it) in a streamlined way.\r\n\r\nCompound is the step before Backbone, Angular, or something like that. You don't have to learn something new, it's the plain and simple jQuery you're used to, only formalized.\r\n\r\n## Usage\r\n\r\nSimply add `compound.js` after jQuery and then create your compounds.\r\n\r\nFor instance:\r\n\r\n```js\r\n$('p').compound({\r\n  ready: function() {\r\n    this.element.text('Hello');\r\n  }\r\n});\r\n```\r\n\r\nThe example above created a compound for every `<p>`.\r\n\r\nThe argument we provide is a hash the configures your compound. You may provide arbitrary keys with values or functions, but we got a few reserved ones - like `ready`.\r\n\r\nThe `ready` option is a function which will be called after the compound is configured. `this` here references the compound itself and `this.element` its root element - in this case a `<p>`.\r\n\r\nCheck out some other examples:\r\n\r\n- ...\r\n\r\n## API\r\n\r\n### Configuration\r\n\r\n- `ready`\r\n- `children`\r\n- `events`\r\n\r\n### Events\r\n\r\n...\r\n\r\n## License\r\n\r\nSee [CC Attribution-ShareAlike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/deed.en_US)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}